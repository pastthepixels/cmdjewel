name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]



env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash # fixes mingw things on windows
    steps:
    - uses: actions/checkout@v4
    # alias x86_64-w64-mingw32-ar to ar on the windows runner
    - name: ar alias
      run: cp C:\\mingw64\\bin\\ar.exe /bin/x86_64-w64-mingw32-ar
    # speed up compilation times
    - name: setup parallel make
      run: echo MAKEFLAGS=-j${NUMBER_OF_PROCESSORS} >> $GITHUB_ENV
    # set ldflags/rustflags
    - name: Set LDFLAGS/RUSTFLAGS
      run: |
        echo RUSTFLAGS="-Clink-arg=-static-libstdc++" >> $GITHUB_ENV
        echo LDFLAGS="-static-libstdc++ -static-libgcc -static" >> $GITHUB_ENV
    # build cmdjewel with cargo
    - name: Build
      run: cargo build -vv --release --target=x86_64-pc-windows-gnu
    # upload builds named after the runner
    - uses: actions/upload-artifact@v4
      with:
        name: cmdjewel-windows-latest
        path: target/x86_64-pc-windows-gnu/release/cmdjewel*

  build:
    strategy:
       matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash # fixes mingw things on windows
    steps:
    - uses: actions/checkout@v4
    # install alsa rust bindings on the ubuntu runner
    - name: Install librust-alsa-dev
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install librust-alsa-dev
    # speed up compilation times
    - name: setup parallel make
      run: echo MAKEFLAGS=-j${NUMBER_OF_PROCESSORS} >> $GITHUB_ENV
    # build cmdjewel with cargo
    - name: Build
      run: cargo build -vv --release
    # upload builds named after each runner (the linux one is cmdjewel-ubuntu-latest, built on ubuntu-latest)
    - uses: actions/upload-artifact@v4
      with:
        name: cmdjewel-${{ matrix.os }}
        path: target/release/cmdjewel*
