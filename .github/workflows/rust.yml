name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]



env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v4
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: msys/base-devel msys/autoconf mingw64/mingw-w64-x86_64-rust mingw64/mingw-w64-x86_64-toolchain msys/autoconf-archive msys/automake msys/ccache msys/doxygen msys/gawk msys/help2man msys/libtool msys/git msys/p7zip msys/perl-XML-LibXML msys/subversion msys/unzip msys/xz msys/zip mingw64/mingw-w64-x86_64-clang mingw64/mingw-w64-x86_64-flac mingw64/mingw-w64-x86_64-libltdl mingw64/mingw-w64-x86_64-libogg mingw64/mingw-w64-x86_64-libsndfile mingw64/mingw-w64-x86_64-libvorbis mingw64/mingw-w64-x86_64-mpg123 mingw64/mingw-w64-x86_64-portaudio mingw64/mingw-w64-x86_64-pulseaudio mingw64/mingw-w64-x86_64-SDL2 mingw64/mingw-w64-x86_64-zlib
    - name: setup parallel make
      run: echo MAKEFLAGS=-j${NUMBER_OF_PROCESSORS} >> $GITHUB_ENV
    - name: Build
      run: LDFLAGS="-lws2_32" CARGO_NET_GIT_FETCH_WITH_CLI=true cargo build --verbose --release

  build:
    strategy:
       matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install librust-alsa-dev
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install librust-alsa-dev
    - name: Build
      run: cargo build --verbose --release
    - uses: actions/upload-artifact@v4
      with:
        name: cmdjewel
        path: target/release/cmdjewel*
